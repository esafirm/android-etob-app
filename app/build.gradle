apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply from: '../config/quality/quality.gradle'
apply from: 'versioning.gradle'

android {
  compileSdkVersion 24
  buildToolsVersion '24'

  defaultConfig {
    applicationId 'com.etob.android'
    minSdkVersion 16
    targetSdkVersion 24
    testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
    versionCode buildVersionCode()
    versionName appVersion
  }

  signingConfigs {
    debug {
      storeFile file('keystore/debug.keystore')
      keyAlias 'androiddebugkey'
      storePassword 'android'
      keyPassword 'android'
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    debug {
      signingConfig signingConfigs.debug
      versionNameSuffix " Debug"
      debuggable true
    }

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
    }
  }

  buildTypes.each {
    it.resValue 'string', 'map_key', "$MAP_KEY"
  }

  sourceSets {
    def commonTestDir = 'src/commonTest/java'
    test {
      java.srcDir commonTestDir
    }
    androidTest {
      java.srcDir commonTestDir
    }
  }

  //Needed because of this https://github.com/square/okio/issues/58
  lintOptions {
    warning 'InvalidPackage'
  }
}

play {
  serviceAccountEmail = 'your-service-account-email'
  pk12File = file('key.p12')
  // By default publishes to Alpha channel
  track = 'alpha'
}

dependencies {
  final PLAY_SERVICES_VERSION = '9.4.0'
  final SUPPORT_LIBRARY_VERSION = '24.1.1'
  final RETROFIT_VERSION = '2.1.0'
  final DAGGER_VERSION = '2.5'
  final BUTTERKNIFE_VERSION = '8.1.0'
  final OKHTTP_VERSION = '3.4.1'

  def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

  // App Dependencies
  compile "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
  compile "com.google.android.gms:play-services-maps:$PLAY_SERVICES_VERSION"
  compile "com.google.android.gms:play-services-location:$PLAY_SERVICES_VERSION"

  compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
  compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"

  compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
  compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
  compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
  compile "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
  compile "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"

  compile 'com.github.orhanobut:hawk:1.23'
  compile 'com.github.esafirm:androidcommon:0.2.6'
  compile 'com.github.bumptech.glide:glide:3.7.0'
  compile 'io.reactivex:rxandroid:1.2.1'
  compile 'io.reactivex:rxjava:1.1.9'

  //Location
  compile 'com.github.esafirm:Android-ReactiveLocation:v0.9.1'

  //Utils
  compile "com.github.VictorAlbertos:RxActivityResult:0.3.5"
  compile 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar'

  compile 'com.jakewharton.timber:timber:4.1.2'
  compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
  apt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

  // Dagger
  compile "com.google.dagger:dagger:$DAGGER_VERSION"
  provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2
  apt daggerCompiler
  testApt daggerCompiler
  androidTestApt daggerCompiler
}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
  testLogging.events = ["failed", "passed", "skipped"]
}


